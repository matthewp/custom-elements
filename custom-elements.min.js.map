{"version":3,"sources":["src/AlreadyConstructedMarker.js","src/Utilities.js","src/CustomElementReactionsStack.js","src/CustomElementInternals.js","src/CustomElementState.js","src/DocumentConstructionObserver.js","src/Deferred.js","src/CustomElementRegistry.js","src/Patch/Native.js","src/Patch/HTMLElement.js","src/custom-elements.js","src/Patch/Interface/ParentNode.js","src/Patch/Document.js","src/Patch/Node.js","src/Patch/Interface/ChildNode.js","src/Patch/Element.js"],"names":["$jscompDefaultExport","AlreadyConstructedMarker","reservedTagList","Set","isValidCustomElementName$$module$$src$Utilities","isValidCustomElementName","localName","reserved","has","validForm","test","isConnected$$module$$src$Utilities","isConnected","node","nativeValue","undefined","current","__CE_isImportDocument","Document","parentNode","window","ShadowRoot","host","nextSiblingOrAncestorSibling$$module$$src$Utilities","nextSiblingOrAncestorSibling","root","start","nextSibling","walkDeepDescendantElements$$module$$src$Utilities","walkDeepDescendantElements","callback","visitedImports","nodeType","Node","ELEMENT_NODE","element","getAttribute","importNode","import","add","child","firstChild","shadowRoot","__CE_shadowRoot","setPropertyUnchecked$$module$$src$Utilities","setPropertyUnchecked","destination","name","value","constructor","CustomElementReactionsStack","_stack","Array","_frames","_length","_backupElementQueue","_processingTheBackupElementQueue","runInFrame","fn","frameStart","result","frameEnd","i","_drainReactionQueue","__CE_nextReaction","reaction","__CE_next","__CE_lastReaction","enqueueReaction","push","Promise","resolve","then","length","shift","CustomElementInternals","_localNameToDefinition","Map","_constructorToDefinition","_patches","_hasPatches","_reactionsStack","CEReactions","wrappedFn","self","apply","arguments","runInCEReactionsFrame","setDefinition","definition","set","addPatch","listener","patchTree","patch","__CE_patched","connectTree","custom","__CE_state","connectedCallback","upgradeElement","disconnectTree","disconnectedCallback","patchAndUpgradeTree","gatherElements","readyState","__CE_hasRegistry","addEventListener","__CE_documentLoadHandled","delete","_upgradeElement","localNameToDefinition","get","constructionStack","Error","pop","e","failed","__CE_definition","attributeChangedCallback","observedAttributes","call","oldValue","newValue","namespace","indexOf","DocumentConstructionObserver","internals","doc","_internals","_document","_observer","MutationObserver","_handleMutations","bind","observe","childList","subtree","disconnect","mutations","addedNodes","j","Deferred","_resolve","_value","_promise","CustomElementRegistry","_elementDefinitionIsRunning","_whenDefinedDeferred","_flushCallback","this._flushCallback","_flushPending","_unflushedLocalNames","_documentConstructionObserver","document","define","Function","TypeError","SyntaxError","adoptedCallback","getCallback","callbackValue","prototype","Object","_flush","deferred","whenDefined","reject","prior","polyfillWrapFlushCallback","outer","inner","flush","Document_createElement","createElement","Document_createElementNS","createElementNS","Document_importNode","Document_prepend","Document_append","Node_cloneNode","cloneNode","Node_appendChild","appendChild","Node_insertBefore","insertBefore","Node_removeChild","removeChild","Node_replaceChild","replaceChild","Node_textContent","getOwnPropertyDescriptor","Element_attachShadow","Element","Element_innerHTML","Element_getAttribute","Element_setAttribute","setAttribute","Element_removeAttribute","removeAttribute","Element_getAttributeNS","getAttributeNS","Element_setAttributeNS","setAttributeNS","Element_removeAttributeNS","removeAttributeNS","Element_insertAdjacentElement","Element_prepend","Element_append","Element_before","Element_after","Element_replaceWith","Element_remove","HTMLElement","HTMLElement_innerHTML","HTMLElement_insertAdjacentElement","$jscompDefaultExport$$module$$src$Patch$HTMLElement","$jscompDefaultExport$$module$$src$Patch$Native.Document_createElement.call","setPrototypeOf","lastIndex","$jscompDefaultExport$$module$$src$Patch$Native.HTMLElement","$jscompDefaultExport$$module$$src$Patch$Interface$ParentNode","builtIn","connectedBefore","nodes","filter","prepend","append","$jscompDefaultExport$$module$$src$Patch$Document","deep","clone","$jscompDefaultExport$$module$$src$Patch$Native.Document_importNode.call","NS_HTML","$jscompDefaultExport$$module$$src$Patch$Native.Document_createElementNS.call","$jscompDefaultExport$$module$$src$Patch$Native.Document_prepend","$jscompDefaultExport$$module$$src$Patch$Native.Document_append","$jscompDefaultExport$$module$$src$Patch$Node","patch_textContent","baseDescriptor","defineProperty","enumerable","configurable","assignedValue","TEXT_NODE","refNode","DocumentFragment","$jscompDefaultExport$$module$$src$Patch$Native.Node_insertBefore.call","nativeResult","$jscompDefaultExport$$module$$src$Patch$Native.Node_appendChild.call","$jscompDefaultExport$$module$$src$Patch$Native.Node_cloneNode.call","ownerDocument","$jscompDefaultExport$$module$$src$Patch$Native.Node_removeChild.call","nodeToInsert","nodeToRemove","thisIsConnected","$jscompDefaultExport$$module$$src$Patch$Native.Node_replaceChild.call","$jscompDefaultExport$$module$$src$Patch$Native.Node_textContent","$jscompDefaultExport$$module$$src$Patch$Native.Node_textContent.get","parts","childNodes","textContent","join","createTextNode","$jscompDefaultExport$$module$$src$Patch$Interface$ChildNode","$jscompDefaultExport$$module$$src$Patch$Native.Element_before","$jscompDefaultExport$$module$$src$Patch$Native.Element_after","wasConnected","$jscompDefaultExport$$module$$src$Patch$Native.Element_replaceWith","$jscompDefaultExport$$module$$src$Patch$Native.Element_remove","$jscompDefaultExport$$module$$src$Patch$Element","patch_innerHTML","htmlString","patch_insertAdjacentElement","baseMethod","where","insertedElement","$jscompDefaultExport$$module$$src$Patch$Native.Element_attachShadow","init","$jscompDefaultExport$$module$$src$Patch$Native.Element_attachShadow.call","console","warn","$jscompDefaultExport$$module$$src$Patch$Native.Element_innerHTML","$jscompDefaultExport$$module$$src$Patch$Native.Element_innerHTML.get","$jscompDefaultExport$$module$$src$Patch$Native.HTMLElement_innerHTML","$jscompDefaultExport$$module$$src$Patch$Native.HTMLElement_innerHTML.get","rawDiv","innerHTML","content","$jscompDefaultExport$$module$$src$Patch$Native.Element_setAttribute.call","$jscompDefaultExport$$module$$src$Patch$Native.Element_getAttribute.call","$jscompDefaultExport$$module$$src$Patch$Native.Element_setAttributeNS.call","$jscompDefaultExport$$module$$src$Patch$Native.Element_getAttributeNS.call","$jscompDefaultExport$$module$$src$Patch$Native.Element_removeAttribute.call","$jscompDefaultExport$$module$$src$Patch$Native.Element_removeAttributeNS.call","$jscompDefaultExport$$module$$src$Patch$Native.HTMLElement_insertAdjacentElement","$jscompDefaultExport$$module$$src$Patch$Native.Element_insertAdjacentElement","$jscompDefaultExport$$module$$src$Patch$Native.Element_prepend","$jscompDefaultExport$$module$$src$Patch$Native.Element_append","priorCustomElements","customElements"],"mappings":"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","file":"custom-elements.min.js","sourcesContent":["/**\n * This class exists only to work around Closure's lack of a way to describe\n * singletons. It represents the 'already constructed marker' used in custom\n * element construction stacks.\n *\n * https://html.spec.whatwg.org/#concept-already-constructed-marker\n */\nclass AlreadyConstructedMarker {}\n\nexport default new AlreadyConstructedMarker();\n","const reservedTagList = new Set([\n  'annotation-xml',\n  'color-profile',\n  'font-face',\n  'font-face-src',\n  'font-face-uri',\n  'font-face-format',\n  'font-face-name',\n  'missing-glyph',\n]);\n\n/**\n * @param {string} localName\n * @returns {boolean}\n */\nexport function isValidCustomElementName(localName) {\n  const reserved = reservedTagList.has(localName);\n  const validForm = /^[a-z][.0-9_a-z]*-[\\-.0-9_a-z]*$/.test(localName);\n  return !reserved && validForm;\n}\n\n/**\n * @private\n * @param {!Node} node\n * @return {boolean}\n */\nexport function isConnected(node) {\n  // Use `Node#isConnected`, if defined.\n  const nativeValue = node.isConnected;\n  if (nativeValue !== undefined) {\n    return nativeValue;\n  }\n\n  /** @type {?Node|undefined} */\n  let current = node;\n  while (current && !(current.__CE_isImportDocument || current instanceof Document)) {\n    current = current.parentNode || (window.ShadowRoot && current instanceof ShadowRoot ? current.host : undefined);\n  }\n  return !!(current && (current.__CE_isImportDocument || current instanceof Document));\n}\n\n/**\n * @param {!Node} root\n * @param {!Node} start\n * @return {?Node}\n */\nfunction nextSiblingOrAncestorSibling(root, start) {\n  let node = start;\n  while (node && node !== root && !node.nextSibling) {\n    node = node.parentNode;\n  }\n  return (!node || node === root) ? null : node.nextSibling;\n}\n\n/**\n * @param {!Node} root\n * @param {!Node} start\n * @return {?Node}\n */\nfunction nextNode(root, start) {\n  return start.firstChild ? start.firstChild : nextSiblingOrAncestorSibling(root, start);\n}\n\n/**\n * @param {!Node} root\n * @param {!function(!Element)} callback\n * @param {!Set<Node>=} visitedImports\n */\nexport function walkDeepDescendantElements(root, callback, visitedImports = new Set()) {\n  let node = root;\n  while (node) {\n    if (node.nodeType === Node.ELEMENT_NODE) {\n      const element = /** @type {!Element} */(node);\n\n      callback(element);\n\n      const localName = element.localName;\n      if (localName === 'link' && element.getAttribute('rel') === 'import') {\n        // If this import (polyfilled or not) has it's root node available,\n        // walk it.\n        const importNode = /** @type {!Node} */ (element.import);\n        if (importNode instanceof Node && !visitedImports.has(importNode)) {\n          // Prevent multiple walks of the same import root.\n          visitedImports.add(importNode);\n\n          for (let child = importNode.firstChild; child; child = child.nextSibling) {\n            walkDeepDescendantElements(child, callback, visitedImports);\n          }\n        }\n\n        // Ignore descendants of import links to prevent attempting to walk the\n        // elements created by the HTML Imports polyfill that we just walked\n        // above.\n        node = nextSiblingOrAncestorSibling(root, element);\n        continue;\n      } else if (localName === 'template') {\n        // Ignore descendants of templates. There shouldn't be any descendants\n        // because they will be moved into `.content` during construction in\n        // browsers that support template but, in case they exist and are still\n        // waiting to be moved by a polyfill, they will be ignored.\n        node = nextSiblingOrAncestorSibling(root, element);\n        continue;\n      }\n\n      // Walk shadow roots.\n      const shadowRoot = element.__CE_shadowRoot;\n      if (shadowRoot) {\n        for (let child = shadowRoot.firstChild; child; child = child.nextSibling) {\n          walkDeepDescendantElements(child, callback, visitedImports);\n        }\n      }\n    }\n\n    node = nextNode(root, node);\n  }\n}\n\n/**\n * Used to suppress Closure's \"Modifying the prototype is only allowed if the\n * constructor is in the same scope\" warning without using\n * `@suppress {newCheckTypes, duplicate}` because `newCheckTypes` is too broad.\n *\n * @param {!Object} destination\n * @param {string} name\n * @param {*} value\n */\nexport function setPropertyUnchecked(destination, name, value) {\n  destination[name] = value;\n}\n","export default class CustomElementReactionsStack {\n  constructor() {\n    this._stack = new Array(16);\n    this._length = 0;\n    this._frames = 0;\n    this._backupElementQueue = [];\n    this._processingTheBackupElementQueue = false;\n  }\n\n  /**\n   * @template T\n   * @param {!function():T} fn\n   * @return {T}\n   */\n  runInFrame(fn) {\n    const frameStart = this._length;\n    this._frames++;\n    const result = fn();\n    this._frames--;\n    const frameEnd = this._length;\n\n    for (let i = frameStart; i < frameEnd; i++) {\n      const element = this._stack[i];\n      this._stack[i] = undefined;\n      this._drainReactionQueue(element);\n    }\n\n    this._length = frameStart;\n\n    return result;\n  }\n\n  /**\n   * @param {!Element} element\n   */\n  _drainReactionQueue(element) {\n    while (element.__CE_nextReaction) {\n      const reaction = element.__CE_nextReaction;\n      element.__CE_nextReaction = reaction.__CE_next;\n      if (element.__CE_lastReaction === reaction) {\n        element.__CE_lastReaction = undefined;\n      }\n      reaction();\n    }\n  }\n\n  /**\n   * @param {!Element} element\n   * @param {!Function} reaction\n   */\n  enqueueReaction(element, reaction) {\n    // If there are any pending reactions, insert this one at the end.\n    if (element.__CE_lastReaction) {\n      element.__CE_lastReaction.__CE_next = reaction;\n    }\n    element.__CE_lastReaction = reaction;\n\n    // If there are no pending reactions, this reaction is next.\n    if (!element.__CE_nextReaction) {\n      element.__CE_nextReaction = reaction;\n    }\n\n    if (this._frames === 0) {\n      this._backupElementQueue.push(element);\n\n      if (this._processingTheBackupElementQueue) return;\n      this._processingTheBackupElementQueue = true;\n\n      Promise.resolve().then(() => {\n        while (this._backupElementQueue.length) {\n          const element = this._backupElementQueue.shift();\n          this._drainReactionQueue(element);\n        }\n        this._processingTheBackupElementQueue = false;\n      });\n    } else {\n      this._stack[this._length++] = element;\n    }\n  }\n};\n","import * as Utilities from './Utilities';\nimport CEState from './CustomElementState';\nimport CustomElementReactionsStack from './CustomElementReactionsStack';\n\nexport default class CustomElementInternals {\n  constructor() {\n    /**\n     * @private\n     * @type {!Map<string, !CustomElementDefinition>}\n     */\n    this._localNameToDefinition = new Map();\n\n    /**\n     * @private\n     * @type {!Map<!Function, !CustomElementDefinition>}\n     */\n    this._constructorToDefinition = new Map();\n\n    /**\n     * @private\n     * @type {!Array<!function(!Node)>}\n     */\n    this._patches = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this._hasPatches = false;\n\n    /**\n     * @private\n     * @type {CustomElementReactionsStack}\n     */\n    this._reactionsStack = new CustomElementReactionsStack();\n  }\n\n  /**\n   * @template T, R\n   * @param {!function(this: T, ...?): R} fn\n   * @return {!function(this: T, ...?): R}\n   */\n  CEReactions(fn) {\n    const self = /** @type {CustomElementInternals} */ (this);\n    /** @type {!function(this: T, ...?): R} */\n    const wrappedFn = function() {\n      return self._reactionsStack.runInFrame(() => fn.apply(this, arguments));\n    };\n    return wrappedFn;\n  }\n\n  /**\n   * @template T\n   * @param {!function(): T} fn\n   * @return {T}\n   */\n  runInCEReactionsFrame(fn) {\n    return this._reactionsStack.runInFrame(fn);\n  }\n\n  /**\n   * @param {string} localName\n   * @param {!CustomElementDefinition} definition\n   */\n  setDefinition(localName, definition) {\n    this._localNameToDefinition.set(localName, definition);\n    this._constructorToDefinition.set(definition.constructor, definition);\n  }\n\n  /**\n   * @param {string} localName\n   * @return {!CustomElementDefinition|undefined}\n   */\n  localNameToDefinition(localName) {\n    return this._localNameToDefinition.get(localName);\n  }\n\n  /**\n   * @param {!Function} constructor\n   * @return {!CustomElementDefinition|undefined}\n   */\n  constructorToDefinition(constructor) {\n    return this._constructorToDefinition.get(constructor);\n  }\n\n  /**\n   * @param {!function(!Node)} listener\n   */\n  addPatch(listener) {\n    this._hasPatches = true;\n    this._patches.push(listener);\n  }\n\n  /**\n   * @param {!Node} node\n   */\n  patchTree(node) {\n    if (!this._hasPatches) return;\n\n    Utilities.walkDeepDescendantElements(node, element => this.patch(element));\n  }\n\n  /**\n   * @param {!Node} node\n   */\n  patch(node) {\n    if (!this._hasPatches) return;\n\n    if (node.__CE_patched) return;\n    node.__CE_patched = true;\n\n    for (let i = 0; i < this._patches.length; i++) {\n      this._patches[i](node);\n    }\n  }\n\n  /**\n   * @param {!Node} root\n   */\n  connectTree(root) {\n    Utilities.walkDeepDescendantElements(root, element => {\n      if (element.__CE_state === CEState.custom) {\n        this.connectedCallback(element);\n      } else {\n        this.upgradeElement(element);\n      }\n    });\n  }\n\n  /**\n   * @param {!Node} root\n   */\n  disconnectTree(root) {\n    Utilities.walkDeepDescendantElements(root, element => {\n      if (element.__CE_state === CEState.custom) {\n        this.disconnectedCallback(element);\n      }\n    });\n  }\n\n  /**\n   * Upgrades all uncustomized custom elements at and below a root node for\n   * which there is a definition. When custom element reaction callbacks are\n   * assumed to be called synchronously (which, by the current DOM / HTML spec\n   * definitions, they are *not*), callbacks for both elements customized\n   * synchronously by the parser and elements being upgraded occur in the same\n   * relative order.\n   *\n   * NOTE: This function, when used to simulate the construction of a tree that\n   * is already created but not customized (i.e. by the parser), does *not*\n   * prevent the element from reading the 'final' (true) state of the tree. For\n   * example, the element, during truly synchronous parsing / construction would\n   * see that it contains no children as they have not yet been inserted.\n   * However, this function does not modify the tree, the element will\n   * (incorrectly) have children. Additionally, self-modification restrictions\n   * for custom element constructors imposed by the DOM spec are *not* enforced.\n   *\n   *\n   * The following nested list shows the steps extending down from the HTML\n   * spec's parsing section that cause elements to be synchronously created and\n   * upgraded:\n   *\n   * The \"in body\" insertion mode:\n   * https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inbody\n   * - Switch on token:\n   *   .. other cases ..\n   *   -> Any other start tag\n   *      - [Insert an HTML element](below) for the token.\n   *\n   * Insert an HTML element:\n   * https://html.spec.whatwg.org/multipage/syntax.html#insert-an-html-element\n   * - Insert a foreign element for the token in the HTML namespace:\n   *   https://html.spec.whatwg.org/multipage/syntax.html#insert-a-foreign-element\n   *   - Create an element for a token:\n   *     https://html.spec.whatwg.org/multipage/syntax.html#create-an-element-for-the-token\n   *     - Will execute script flag is true?\n   *       - (Element queue pushed to the custom element reactions stack.)\n   *     - Create an element:\n   *       https://dom.spec.whatwg.org/#concept-create-element\n   *       - Sync CE flag is true?\n   *         - Constructor called.\n   *         - Self-modification restrictions enforced.\n   *       - Sync CE flag is false?\n   *         - (Upgrade reaction enqueued.)\n   *     - Attributes appended to element.\n   *       (`attributeChangedCallback` reactions enqueued.)\n   *     - Will execute script flag is true?\n   *       - (Element queue popped from the custom element reactions stack.\n   *         Reactions in the popped stack are invoked.)\n   *   - (Element queue pushed to the custom element reactions stack.)\n   *   - Insert the element:\n   *     https://dom.spec.whatwg.org/#concept-node-insert\n   *     - Shadow-including descendants are connected. During parsing\n   *       construction, there are no shadow-*excluding* descendants.\n   *       However, the constructor may have validly attached a shadow\n   *       tree to itself and added descendants to that shadow tree.\n   *       (`connectedCallback` reactions enqueued.)\n   *   - (Element queue popped from the custom element reactions stack.\n   *     Reactions in the popped stack are invoked.)\n   *\n   * @param {!Node} root\n   * @param {!Set<Node>=} visitedImports\n   */\n  patchAndUpgradeTree(root, visitedImports = new Set()) {\n    const gatherElements = element => {\n      if (element.localName === 'link' && element.getAttribute('rel') === 'import') {\n        // The HTML Imports polyfill sets a descendant element of the link to\n        // the `import` property, specifically this is *not* a Document.\n        const importNode = /** @type {?Node} */ (element.import);\n\n        if (importNode instanceof Node && importNode.readyState === 'complete') {\n          importNode.__CE_isImportDocument = true;\n\n          // Connected links are associated with the registry.\n          importNode.__CE_hasRegistry = true;\n        } else {\n          // If this link's import root is not available, its contents can't be\n          // walked. Wait for 'load' and walk it when it's ready.\n          element.addEventListener('load', this.CEReactions(() => {\n            const importNode = /** @type {!Node} */ (element.import);\n\n            if (importNode.__CE_documentLoadHandled) return;\n            importNode.__CE_documentLoadHandled = true;\n\n            importNode.__CE_isImportDocument = true;\n\n            // Connected links are associated with the registry.\n            importNode.__CE_hasRegistry = true;\n\n            // Clone the `visitedImports` set that was populated sync during\n            // the `patchAndUpgradeTree` call that caused this 'load' handler to\n            // be added. Then, remove *this* link's import node so that we can\n            // walk that import again, even if it was partially walked later\n            // during the same `patchAndUpgradeTree` call.\n            const clonedVisitedImports = new Set(visitedImports);\n            visitedImports.delete(importNode);\n\n            this.patchAndUpgradeTree(importNode, visitedImports);\n          }));\n        }\n      } else {\n        if (this._hasPatches) {\n          this.patch(element);\n        }\n        this.upgradeElement(element);\n      }\n    };\n\n    // `walkDeepDescendantElements` populates (and internally checks against)\n    // `visitedImports` when traversing a loaded import.\n    Utilities.walkDeepDescendantElements(root, gatherElements, visitedImports);\n  }\n\n  /**\n   * @param {!Element} element\n   */\n  upgradeElement(element) {\n    if (element.__CE_state !== undefined) return;\n    this._reactionsStack.enqueueReaction(element, () => {\n      this._upgradeElement(element);\n    });\n  }\n\n  /**\n   * @param {!Element} element\n   */\n  _upgradeElement(element) {\n    const currentState = element.__CE_state;\n    if (currentState !== undefined) return;\n\n    const definition = this.localNameToDefinition(element.localName);\n    if (!definition) return;\n\n    definition.constructionStack.push(element);\n\n    const constructor = definition.constructor;\n    try {\n      try {\n        let result = new (constructor)();\n        if (result !== element) {\n          throw new Error('The custom element constructor did not produce the element being upgraded.');\n        }\n      } finally {\n        definition.constructionStack.pop();\n      }\n    } catch (e) {\n      element.__CE_state = CEState.failed;\n      throw e;\n    }\n\n    element.__CE_state = CEState.custom;\n    element.__CE_definition = definition;\n\n    if (definition.attributeChangedCallback) {\n      const observedAttributes = definition.observedAttributes;\n      for (let i = 0; i < observedAttributes.length; i++) {\n        const name = observedAttributes[i];\n        const value = element.getAttribute(name);\n        if (value !== null) {\n          // This IIFE exists to prevent Closure from implementing the `for`\n          // scope around the two `const` variables as a new object for each\n          // iteration.\n          ((element, name, value) => {\n            this._reactionsStack.enqueueReaction(element, () => {\n              definition.attributeChangedCallback.call(element, name, null, value, null);\n            });\n          })(element, name, value);\n        }\n      }\n    }\n\n    if (definition.connectedCallback && Utilities.isConnected(element)) {\n      this._reactionsStack.enqueueReaction(element, () => {\n        definition.connectedCallback.call(element);\n      });\n    }\n  }\n\n  /**\n   * @param {!Element} element\n   */\n  connectedCallback(element) {\n    const definition = element.__CE_definition;\n    if (definition.connectedCallback) {\n      this._reactionsStack.enqueueReaction(element, () => {\n        definition.connectedCallback.call(element);\n      });\n    }\n  }\n\n  /**\n   * @param {!Element} element\n   */\n  disconnectedCallback(element) {\n    const definition = element.__CE_definition;\n    if (definition.disconnectedCallback) {\n      this._reactionsStack.enqueueReaction(element, () => {\n        definition.disconnectedCallback.call(element);\n      });\n    }\n  }\n\n  /**\n   * @param {!Element} element\n   * @param {string} name\n   * @param {?string} oldValue\n   * @param {?string} newValue\n   * @param {?string} namespace\n   */\n  attributeChangedCallback(element, name, oldValue, newValue, namespace) {\n    const definition = element.__CE_definition;\n    if (\n      definition.attributeChangedCallback &&\n      definition.observedAttributes.indexOf(name) > -1\n    ) {\n      this._reactionsStack.enqueueReaction(element, () => {\n        definition.attributeChangedCallback.call(element, name, oldValue, newValue, namespace);\n      });\n    }\n  }\n}\n","/**\n * @enum {number}\n */\nconst CustomElementState = {\n  custom: 1,\n  failed: 2,\n};\n\nexport default CustomElementState;\n","import CustomElementInternals from './CustomElementInternals';\n\nexport default class DocumentConstructionObserver {\n  constructor(internals, doc) {\n    /**\n     * @type {!CustomElementInternals}\n     */\n    this._internals = internals;\n\n    /**\n     * @type {!Document}\n     */\n    this._document = doc;\n\n    /**\n     * @type {MutationObserver|undefined}\n     */\n    this._observer = undefined;\n\n\n    // Simulate tree construction for all currently accessible nodes in the\n    // document.\n    this._internals.patchAndUpgradeTree(this._document);\n\n    if (this._document.readyState === 'loading') {\n      this._observer = new MutationObserver(this._handleMutations.bind(this));\n\n      // Nodes created by the parser are given to the observer *before* the next\n      // task runs. Inline scripts are run in a new task. This means that the\n      // observer will be able to handle the newly parsed nodes before the inline\n      // script is run.\n      this._observer.observe(this._document, {\n        childList: true,\n        subtree: true,\n      });\n    }\n  }\n\n  disconnect() {\n    if (this._observer) {\n      this._observer.disconnect();\n    }\n  }\n\n  /**\n   * @param {!Array<!MutationRecord>} mutations\n   */\n  _handleMutations(mutations) {\n    // Once the document's `readyState` is 'interactive' or 'complete', all new\n    // nodes created within that document will be the result of script and\n    // should be handled by patching.\n    const readyState = this._document.readyState;\n    if (readyState === 'interactive' || readyState === 'complete') {\n      this.disconnect();\n    }\n\n    for (let i = 0; i < mutations.length; i++) {\n      const addedNodes = mutations[i].addedNodes;\n      for (let j = 0; j < addedNodes.length; j++) {\n        const node = addedNodes[j];\n        this._internals.patchAndUpgradeTree(node);\n      }\n    }\n  }\n}\n","/**\n * @template T\n */\nexport default class Deferred {\n  constructor() {\n    /**\n     * @private\n     * @type {T|undefined}\n     */\n    this._value = undefined;\n\n    /**\n     * @private\n     * @type {Function|undefined}\n     */\n    this._resolve = undefined;\n\n    /**\n     * @private\n     * @type {!Promise<T>}\n     */\n    this._promise = new Promise(resolve => {\n      this._resolve = resolve;\n\n      if (this._value) {\n        resolve(this._value);\n      }\n    });\n  }\n\n  /**\n   * @param {T} value\n   */\n  resolve(value) {\n    if (this._value) {\n      throw new Error('Already resolved.');\n    }\n\n    this._value = value;\n\n    if (this._resolve) {\n      this._resolve(value);\n    }\n  }\n\n  /**\n   * @return {!Promise<T>}\n   */\n  toPromise() {\n    return this._promise;\n  }\n}\n","import CustomElementInternals from './CustomElementInternals';\nimport DocumentConstructionObserver from './DocumentConstructionObserver';\nimport Deferred from './Deferred';\nimport * as Utilities from './Utilities';\n\n/**\n * @unrestricted\n */\nexport default class CustomElementRegistry {\n\n  /**\n   * @param {!CustomElementInternals} internals\n   */\n  constructor(internals) {\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this._elementDefinitionIsRunning = false;\n\n    /**\n     * @private\n     * @type {!CustomElementInternals}\n     */\n    this._internals = internals;\n\n    /**\n     * @private\n     * @type {!Map<string, !Deferred<undefined>>}\n     */\n    this._whenDefinedDeferred = new Map();\n\n    /**\n     * The default flush callback triggers the document walk synchronously.\n     * @private\n     * @type {!Function}\n     */\n    this._flushCallback = fn => fn();\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this._flushPending = false;\n\n    /**\n     * @private\n     * @type {!Array<string>}\n     */\n    this._unflushedLocalNames = [];\n\n    /**\n     * @private\n     * @type {!DocumentConstructionObserver}\n     */\n    this._documentConstructionObserver = new DocumentConstructionObserver(internals, document);\n  }\n\n  /**\n   * @param {string} localName\n   * @param {!Function} constructor\n   */\n  define(localName, constructor) {\n    return this._internals.runInCEReactionsFrame(() => {\n      if (!(constructor instanceof Function)) {\n        throw new TypeError('Custom element constructors must be functions.');\n      }\n\n      if (!Utilities.isValidCustomElementName(localName)) {\n        throw new SyntaxError(`The element name '${localName}' is not valid.`);\n      }\n\n      if (this._internals.localNameToDefinition(localName)) {\n        throw new Error(`A custom element with name '${localName}' has already been defined.`);\n      }\n\n      if (this._elementDefinitionIsRunning) {\n        throw new Error('A custom element is already being defined.');\n      }\n      this._elementDefinitionIsRunning = true;\n\n      let connectedCallback;\n      let disconnectedCallback;\n      let adoptedCallback;\n      let attributeChangedCallback;\n      let observedAttributes;\n      try {\n        /** @type {!Object} */\n        const prototype = constructor.prototype;\n        if (!(prototype instanceof Object)) {\n          throw new TypeError('The custom element constructor\\'s prototype is not an object.');\n        }\n\n        function getCallback(name) {\n          const callbackValue = prototype[name];\n          if (callbackValue !== undefined && !(callbackValue instanceof Function)) {\n            throw new Error(`The '${name}' callback must be a function.`);\n          }\n          return callbackValue;\n        }\n\n        connectedCallback = getCallback('connectedCallback');\n        disconnectedCallback = getCallback('disconnectedCallback');\n        adoptedCallback = getCallback('adoptedCallback');\n        attributeChangedCallback = getCallback('attributeChangedCallback');\n        observedAttributes = constructor['observedAttributes'] || [];\n      } catch (e) {\n        return;\n      } finally {\n        this._elementDefinitionIsRunning = false;\n      }\n\n      const definition = {\n        localName,\n        constructor,\n        connectedCallback,\n        disconnectedCallback,\n        adoptedCallback,\n        attributeChangedCallback,\n        observedAttributes,\n        constructionStack: [],\n      };\n\n      this._internals.setDefinition(localName, definition);\n\n      this._unflushedLocalNames.push(localName);\n\n      // If we've already called the flush callback and it hasn't called back yet,\n      // don't call it again.\n      if (!this._flushPending) {\n        this._flushPending = true;\n        this._flushCallback(() => this._flush());\n      }\n    });\n  }\n\n  _flush() {\n    // If no new definitions were defined, don't attempt to flush. This could\n    // happen if a flush callback keeps the function it is given and calls it\n    // multiple times.\n    if (this._flushPending === false) return;\n    this._flushPending = false;\n\n    this._internals.runInCEReactionsFrame(() => {\n      this._internals.patchAndUpgradeTree(document);\n\n      while (this._unflushedLocalNames.length > 0) {\n        const localName = this._unflushedLocalNames.shift();\n        const deferred = this._whenDefinedDeferred.get(localName);\n        if (deferred) {\n          deferred.resolve(undefined);\n        }\n      }\n    });\n  }\n\n  /**\n   * @param {string} localName\n   * @return {Function|undefined}\n   */\n  get(localName) {\n    const definition = this._internals.localNameToDefinition(localName);\n    if (definition) {\n      return definition.constructor;\n    }\n\n    return undefined;\n  }\n\n  /**\n   * @param {string} localName\n   * @return {!Promise<undefined>}\n   */\n  whenDefined(localName) {\n    if (!Utilities.isValidCustomElementName(localName)) {\n      return Promise.reject(new SyntaxError(`'${localName}' is not a valid custom element name.`));\n    }\n\n    const prior = this._whenDefinedDeferred.get(localName);\n    if (prior) {\n      return prior.toPromise();\n    }\n\n    const deferred = new Deferred();\n    this._whenDefinedDeferred.set(localName, deferred);\n\n    const definition = this._internals.localNameToDefinition(localName);\n    // Resolve immediately only if the given local name has a definition *and*\n    // the full document walk to upgrade elements with that local name has\n    // already happened.\n    if (definition && this._unflushedLocalNames.indexOf(localName) === -1) {\n      deferred.resolve(undefined);\n    }\n\n    return deferred.toPromise();\n  }\n\n  polyfillWrapFlushCallback(outer) {\n    this._documentConstructionObserver.disconnect();\n    const inner = this._flushCallback;\n    this._flushCallback = flush => outer(() => inner(flush));\n  }\n}\n\n// Closure compiler exports.\nwindow['CustomElementRegistry'] = CustomElementRegistry;\nCustomElementRegistry.prototype['define'] = CustomElementRegistry.prototype.define;\nCustomElementRegistry.prototype['get'] = CustomElementRegistry.prototype.get;\nCustomElementRegistry.prototype['whenDefined'] = CustomElementRegistry.prototype.whenDefined;\nCustomElementRegistry.prototype['polyfillWrapFlushCallback'] = CustomElementRegistry.prototype.polyfillWrapFlushCallback;\n","export default {\n  Document_createElement: window.Document.prototype.createElement,\n  Document_createElementNS: window.Document.prototype.createElementNS,\n  Document_importNode: window.Document.prototype.importNode,\n  Document_prepend: window.Document.prototype['prepend'],\n  Document_append: window.Document.prototype['append'],\n  Node_cloneNode: window.Node.prototype.cloneNode,\n  Node_appendChild: window.Node.prototype.appendChild,\n  Node_insertBefore: window.Node.prototype.insertBefore,\n  Node_removeChild: window.Node.prototype.removeChild,\n  Node_replaceChild: window.Node.prototype.replaceChild,\n  Node_textContent: Object.getOwnPropertyDescriptor(window.Node.prototype, 'textContent'),\n  Element_attachShadow: window.Element.prototype['attachShadow'],\n  Element_innerHTML: Object.getOwnPropertyDescriptor(window.Element.prototype, 'innerHTML'),\n  Element_getAttribute: window.Element.prototype.getAttribute,\n  Element_setAttribute: window.Element.prototype.setAttribute,\n  Element_removeAttribute: window.Element.prototype.removeAttribute,\n  Element_getAttributeNS: window.Element.prototype.getAttributeNS,\n  Element_setAttributeNS: window.Element.prototype.setAttributeNS,\n  Element_removeAttributeNS: window.Element.prototype.removeAttributeNS,\n  Element_insertAdjacentElement: window.Element.prototype['insertAdjacentElement'],\n  Element_prepend: window.Element.prototype['prepend'],\n  Element_append: window.Element.prototype['append'],\n  Element_before: window.Element.prototype['before'],\n  Element_after: window.Element.prototype['after'],\n  Element_replaceWith: window.Element.prototype['replaceWith'],\n  Element_remove: window.Element.prototype['remove'],\n  HTMLElement: window.HTMLElement,\n  HTMLElement_innerHTML: Object.getOwnPropertyDescriptor(window.HTMLElement.prototype, 'innerHTML'),\n  HTMLElement_insertAdjacentElement: window.HTMLElement.prototype['insertAdjacentElement'],\n};\n","import Native from './Native';\nimport CustomElementInternals from '../CustomElementInternals';\nimport CEState from '../CustomElementState';\nimport AlreadyConstructedMarker from '../AlreadyConstructedMarker';\n\n/**\n * @param {!CustomElementInternals} internals\n */\nexport default function(internals) {\n  window['HTMLElement'] = (function() {\n    /**\n     * @type {function(new: HTMLElement): !HTMLElement}\n     */\n    function HTMLElement() {\n      // This should really be `new.target` but `new.target` can't be emulated\n      // in ES5. Assuming the user keeps the default value of the constructor's\n      // prototype's `constructor` property, this is equivalent.\n      /** @type {!Function} */\n      const constructor = this.constructor;\n\n      const definition = internals.constructorToDefinition(constructor);\n      if (!definition) {\n        throw new Error('The custom element being constructed was not registered with `customElements`.');\n      }\n\n      const constructionStack = definition.constructionStack;\n\n      if (constructionStack.length === 0) {\n        const element = Native.Document_createElement.call(document, definition.localName);\n        Object.setPrototypeOf(element, constructor.prototype);\n        element.__CE_state = CEState.custom;\n        element.__CE_definition = definition;\n        internals.patch(element);\n        return element;\n      }\n\n      const lastIndex = constructionStack.length - 1;\n      const element = constructionStack[lastIndex];\n      if (element === AlreadyConstructedMarker) {\n        throw new Error('The HTMLElement constructor was either called reentrantly for this constructor or called multiple times.');\n      }\n      constructionStack[lastIndex] = AlreadyConstructedMarker;\n\n      Object.setPrototypeOf(element, constructor.prototype);\n      internals.patch(/** @type {!HTMLElement} */ (element));\n\n      return element;\n    }\n\n    HTMLElement.prototype = Native.HTMLElement.prototype;\n\n    return HTMLElement;\n  })();\n};\n","/**\n * @license\n * Copyright (c) 2016 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n */\n\nimport CustomElementInternals from './CustomElementInternals';\nimport CustomElementRegistry from './CustomElementRegistry';\n\nimport PatchHTMLElement from './Patch/HTMLElement';\nimport PatchDocument from './Patch/Document';\nimport PatchNode from './Patch/Node';\nimport PatchElement from './Patch/Element';\n\nconst priorCustomElements = window['customElements'];\n\nif (!priorCustomElements ||\n     priorCustomElements['forcePolyfill'] ||\n     (typeof priorCustomElements['define'] != 'function') ||\n     (typeof priorCustomElements['get'] != 'function')) {\n  /** @type {!CustomElementInternals} */\n  const internals = new CustomElementInternals();\n\n  PatchHTMLElement(internals);\n  PatchDocument(internals);\n  PatchNode(internals);\n  PatchElement(internals);\n\n  // The main document is always associated with the registry.\n  document.__CE_hasRegistry = true;\n\n  /** @type {!CustomElementRegistry} */\n  const customElements = new CustomElementRegistry(internals);\n\n  Object.defineProperty(window, 'customElements', {\n    configurable: true,\n    enumerable: true,\n    value: customElements,\n  });\n}\n","import CustomElementInternals from '../../CustomElementInternals';\nimport * as Utilities from '../../Utilities';\n\n/**\n * @typedef {{\n *   prepend: !function(...(!Node|string)),\n  *  append: !function(...(!Node|string)),\n * }}\n */\nlet ParentNodeNativeMethods;\n\n/**\n * @param {!CustomElementInternals} internals\n * @param {!Object} destination\n * @param {!ParentNodeNativeMethods} builtIn\n */\nexport default function(internals, destination, builtIn) {\n  /**\n   * @param {...(!Node|string)} nodes\n   */\n  destination['prepend'] = function(...nodes) {\n    // TODO: Fix this for when one of `nodes` is a DocumentFragment!\n    const connectedBefore = /** @type {!Array<!Node>} */ (nodes.filter(node => {\n      // DocumentFragments are not connected and will not be added to the list.\n      return node instanceof Node && Utilities.isConnected(node);\n    }));\n\n    builtIn.prepend.apply(this, nodes);\n\n    for (let i = 0; i < connectedBefore.length; i++) {\n      internals.disconnectTree(connectedBefore[i]);\n    }\n\n    if (Utilities.isConnected(this)) {\n      for (let i = 0; i < nodes.length; i++) {\n        const node = nodes[i];\n        if (node instanceof Element) {\n          internals.connectTree(node);\n        }\n      }\n    }\n  };\n\n  /**\n   * @param {...(!Node|string)} nodes\n   */\n  destination['append'] = function(...nodes) {\n    // TODO: Fix this for when one of `nodes` is a DocumentFragment!\n    const connectedBefore = /** @type {!Array<!Node>} */ (nodes.filter(node => {\n      // DocumentFragments are not connected and will not be added to the list.\n      return node instanceof Node && Utilities.isConnected(node);\n    }));\n\n    builtIn.append.apply(this, nodes);\n\n    for (let i = 0; i < connectedBefore.length; i++) {\n      internals.disconnectTree(connectedBefore[i]);\n    }\n\n    if (Utilities.isConnected(this)) {\n      for (let i = 0; i < nodes.length; i++) {\n        const node = nodes[i];\n        if (node instanceof Element) {\n          internals.connectTree(node);\n        }\n      }\n    }\n  };\n};\n","import Native from './Native';\nimport CustomElementInternals from '../CustomElementInternals';\nimport * as Utilities from '../Utilities';\n\nimport PatchParentNode from './Interface/ParentNode';\n\n/**\n * @param {!CustomElementInternals} internals\n */\nexport default function(internals) {\n  Utilities.setPropertyUnchecked(Document.prototype, 'createElement',\n    /**\n     * @this {Document}\n     * @param {string} localName\n     * @return {!Element}\n     */\n    function(localName) {\n      // Only create custom elements if this document is associated with the registry.\n      if (this.__CE_hasRegistry) {\n        const definition = internals.localNameToDefinition(localName);\n        if (definition) {\n          return new (definition.constructor)();\n        }\n      }\n\n      const result = /** @type {!Element} */\n        (Native.Document_createElement.call(this, localName));\n      internals.patch(result);\n      return result;\n    });\n\n  Utilities.setPropertyUnchecked(Document.prototype, 'importNode',\n    internals.CEReactions(\n      /**\n       * @this {Document}\n       * @param {!Node} node\n       * @param {boolean=} deep\n       * @return {!Node}\n       */\n      function(node, deep) {\n        const clone = Native.Document_importNode.call(this, node, deep);\n        // Only create custom elements if this document is associated with the registry.\n        if (!this.__CE_hasRegistry) {\n          internals.patchTree(clone);\n        } else {\n          internals.patchAndUpgradeTree(clone);\n        }\n        return clone;\n      }));\n\n  const NS_HTML = \"http://www.w3.org/1999/xhtml\";\n\n  Utilities.setPropertyUnchecked(Document.prototype, 'createElementNS',\n    /**\n     * @this {Document}\n     * @param {?string} namespace\n     * @param {string} localName\n     * @return {!Element}\n     */\n    function(namespace, localName) {\n      // Only create custom elements if this document is associated with the registry.\n      if (this.__CE_hasRegistry && (namespace === null || namespace === NS_HTML)) {\n        const definition = internals.localNameToDefinition(localName);\n        if (definition) {\n          return new (definition.constructor)();\n        }\n      }\n\n      const result = /** @type {!Element} */\n        (Native.Document_createElementNS.call(this, namespace, localName));\n      internals.patch(result);\n      return result;\n    });\n\n  PatchParentNode(internals, Document.prototype, {\n    prepend: Native.Document_prepend,\n    append: Native.Document_append,\n  });\n};\n","import Native from './Native';\nimport CustomElementInternals from '../CustomElementInternals';\nimport * as Utilities from '../Utilities';\n\n/**\n * @param {!CustomElementInternals} internals\n */\nexport default function(internals) {\n  // `Node#nodeValue` is implemented on `Attr`.\n  // `Node#textContent` is implemented on `Attr`, `Element`.\n\n  Utilities.setPropertyUnchecked(Node.prototype, 'insertBefore',\n    internals.CEReactions(\n      /**\n       * @this {Node}\n       * @param {!Node} node\n       * @param {?Node} refNode\n       * @return {!Node}\n       */\n      function(node, refNode) {\n        if (node instanceof DocumentFragment) {\n          // DocumentFragments can't be connected, so `disconnectTree` will never\n          // need to be called on a DocumentFragment's children after inserting it.\n\n          if (Utilities.isConnected(this)) {\n            internals.connectTree(node);\n          }\n\n          return Native.Node_insertBefore.call(this, node, refNode);\n        }\n\n\n        if (Utilities.isConnected(node)) {\n          internals.disconnectTree(node);\n        }\n\n        const nativeResult = Native.Node_insertBefore.call(this, node, refNode);\n\n        if (Utilities.isConnected(node)) {\n          internals.connectTree(node);\n        }\n\n        return nativeResult;\n      }));\n\n  Utilities.setPropertyUnchecked(Node.prototype, 'appendChild',\n    internals.CEReactions(\n      /**\n       * @this {Node}\n       * @param {!Node} node\n       * @return {!Node}\n       */\n      function(node) {\n        if (node instanceof DocumentFragment) {\n          // DocumentFragments can't be connected, so `disconnectTree` will never\n          // need to be called on a DocumentFragment's children after inserting it.\n\n          if (Utilities.isConnected(this)) {\n            internals.connectTree(node);\n          }\n\n          return Native.Node_appendChild.call(this, node);\n        }\n\n\n        if (Utilities.isConnected(node)) {\n          internals.disconnectTree(node);\n        }\n\n        const nativeResult = Native.Node_appendChild.call(this, node);\n\n        if (Utilities.isConnected(node)) {\n          internals.connectTree(node);\n        }\n\n        return nativeResult;\n      }));\n\n  Utilities.setPropertyUnchecked(Node.prototype, 'cloneNode',\n    internals.CEReactions(\n      /**\n       * @this {Node}\n       * @param {boolean=} deep\n       * @return {!Node}\n       */\n      function(deep) {\n        const clone = Native.Node_cloneNode.call(this, deep);\n        // Only create custom elements if this element's owner document is\n        // associated with the registry.\n        if (!this.ownerDocument.__CE_hasRegistry) {\n          internals.patchTree(clone);\n        } else {\n          internals.patchAndUpgradeTree(clone);\n        }\n        return clone;\n      }));\n\n  Utilities.setPropertyUnchecked(Node.prototype, 'removeChild',\n    internals.CEReactions(\n      /**\n       * @this {Node}\n       * @param {!Node} node\n       * @return {!Node}\n       */\n      function(node) {\n        if (Utilities.isConnected(node)) {\n          internals.disconnectTree(node);\n        }\n        return Native.Node_removeChild.call(this, node);\n      }));\n\n  Utilities.setPropertyUnchecked(Node.prototype, 'replaceChild',\n    internals.CEReactions(\n      /**\n       * @this {Node}\n       * @param {!Node} nodeToInsert\n       * @param {!Node} nodeToRemove\n       * @return {!Node}\n       */\n      function(nodeToInsert, nodeToRemove) {\n        const thisIsConnected = Utilities.isConnected(this);\n\n        if (nodeToInsert instanceof DocumentFragment) {\n          if (thisIsConnected) {\n            internals.disconnectTree(nodeToRemove);\n\n            // DocumentFragments can't be connected, so `disconnectTree` will\n            // never need to be called on a DocumentFragment's children after\n            // inserting it.\n\n            internals.connectTree(nodeToInsert);\n          }\n\n          return Native.Node_replaceChild.call(this, nodeToInsert, nodeToRemove);\n        }\n\n\n        if (thisIsConnected) {\n          internals.disconnectTree(nodeToRemove);\n        }\n\n        if (Utilities.isConnected(nodeToInsert)) {\n          internals.disconnectTree(nodeToInsert);\n        }\n\n        if (thisIsConnected) {\n          internals.connectTree(nodeToInsert);\n        }\n\n        return Native.Node_replaceChild.call(this, nodeToInsert, nodeToRemove);\n      }));\n\n\n  function patch_textContent(destination, baseDescriptor) {\n    Object.defineProperty(destination, 'textContent', {\n      enumerable: baseDescriptor.enumerable,\n      configurable: true,\n      get: baseDescriptor.get,\n      set: internals.CEReactions(/** @this {Node} */ function(assignedValue) {\n        // If this is a text node then there are no nodes to disconnect.\n        if (this.nodeType === Node.TEXT_NODE) {\n          baseDescriptor.set.call(this, assignedValue);\n          return;\n        }\n\n        for (let child = this.firstChild; child; child = child.nextSibling) {\n          internals.disconnectTree(child);\n        }\n\n        baseDescriptor.set.call(this, assignedValue);\n      }),\n    });\n  }\n\n  if (Native.Node_textContent && Native.Node_textContent.get) {\n    patch_textContent(Node.prototype, Native.Node_textContent);\n  } else {\n    internals.addPatch(function(element) {\n      patch_textContent(element, {\n        enumerable: true,\n        configurable: true,\n        // NOTE: This implementation of the `textContent` getter assumes that\n        // text nodes' `textContent` getter will not be patched.\n        get: /** @this {Node} */ function() {\n          /** @type {!Array<string>} */\n          const parts = [];\n\n          for (let i = 0; i < this.childNodes.length; i++) {\n            parts.push(this.childNodes[i].textContent);\n          }\n\n          return parts.join('');\n        },\n        set: /** @this {Node} */ function(assignedValue) {\n          while (this.firstChild) {\n            Native.Node_removeChild.call(this, this.firstChild);\n          }\n          Native.Node_appendChild.call(this, document.createTextNode(assignedValue));\n        },\n      });\n    });\n  }\n};\n","import CustomElementInternals from '../../CustomElementInternals';\nimport * as Utilities from '../../Utilities';\n\n/**\n * @typedef {{\n *   before: !function(...(!Node|string)),\n *   after: !function(...(!Node|string)),\n *   replaceWith: !function(...(!Node|string)),\n *   remove: !function(),\n * }}\n */\nlet ChildNodeNativeMethods;\n\n/**\n * @param {!CustomElementInternals} internals\n * @param {!Object} destination\n * @param {!ChildNodeNativeMethods} builtIn\n */\nexport default function(internals, destination, builtIn) {\n  /**\n   * @param {...(!Node|string)} nodes\n   */\n  destination['before'] = function(...nodes) {\n    // TODO: Fix this for when one of `nodes` is a DocumentFragment!\n    const connectedBefore = /** @type {!Array<!Node>} */ (nodes.filter(node => {\n      // DocumentFragments are not connected and will not be added to the list.\n      return node instanceof Node && Utilities.isConnected(node);\n    }));\n\n    builtIn.before.apply(this, nodes);\n\n    for (let i = 0; i < connectedBefore.length; i++) {\n      internals.disconnectTree(connectedBefore[i]);\n    }\n\n    if (Utilities.isConnected(this)) {\n      for (let i = 0; i < nodes.length; i++) {\n        const node = nodes[i];\n        if (node instanceof Element) {\n          internals.connectTree(node);\n        }\n      }\n    }\n  };\n\n  /**\n   * @param {...(!Node|string)} nodes\n   */\n  destination['after'] = function(...nodes) {\n    // TODO: Fix this for when one of `nodes` is a DocumentFragment!\n    const connectedBefore = /** @type {!Array<!Node>} */ (nodes.filter(node => {\n      // DocumentFragments are not connected and will not be added to the list.\n      return node instanceof Node && Utilities.isConnected(node);\n    }));\n\n    builtIn.after.apply(this, nodes);\n\n    for (let i = 0; i < connectedBefore.length; i++) {\n      internals.disconnectTree(connectedBefore[i]);\n    }\n\n    if (Utilities.isConnected(this)) {\n      for (let i = 0; i < nodes.length; i++) {\n        const node = nodes[i];\n        if (node instanceof Element) {\n          internals.connectTree(node);\n        }\n      }\n    }\n  };\n\n  /**\n   * @param {...(!Node|string)} nodes\n   */\n  destination['replaceWith'] = function(...nodes) {\n    // TODO: Fix this for when one of `nodes` is a DocumentFragment!\n    const connectedBefore = /** @type {!Array<!Node>} */ (nodes.filter(node => {\n      // DocumentFragments are not connected and will not be added to the list.\n      return node instanceof Node && Utilities.isConnected(node);\n    }));\n\n    const wasConnected = Utilities.isConnected(this);\n\n    builtIn.replaceWith.apply(this, nodes);\n\n    for (let i = 0; i < connectedBefore.length; i++) {\n      internals.disconnectTree(connectedBefore[i]);\n    }\n\n    if (wasConnected) {\n      internals.disconnectTree(this);\n      for (let i = 0; i < nodes.length; i++) {\n        const node = nodes[i];\n        if (node instanceof Element) {\n          internals.connectTree(node);\n        }\n      }\n    }\n  };\n\n  destination['remove'] = function() {\n    const wasConnected = Utilities.isConnected(this);\n\n    builtIn.remove.call(this);\n\n    if (wasConnected) {\n      internals.disconnectTree(this);\n    }\n  };\n};\n","import Native from './Native';\nimport CustomElementInternals from '../CustomElementInternals';\nimport CEState from '../CustomElementState';\nimport * as Utilities from '../Utilities';\n\nimport PatchParentNode from './Interface/ParentNode';\nimport PatchChildNode from './Interface/ChildNode';\n\n/**\n * @param {!CustomElementInternals} internals\n */\nexport default function(internals) {\n  if (Native.Element_attachShadow) {\n    Utilities.setPropertyUnchecked(Element.prototype, 'attachShadow',\n      internals.CEReactions(\n        /**\n         * @this {Element}\n         * @param {!{mode: string}} init\n         * @return {ShadowRoot}\n         */\n        function(init) {\n          const shadowRoot = Native.Element_attachShadow.call(this, init);\n          this.__CE_shadowRoot = shadowRoot;\n          return shadowRoot;\n        }));\n  } else {\n    console.warn('Custom Elements: `Element#attachShadow` was not patched.');\n  }\n\n\n  function patch_innerHTML(destination, baseDescriptor) {\n    Object.defineProperty(destination, 'innerHTML', {\n      enumerable: baseDescriptor.enumerable,\n      configurable: true,\n      get: baseDescriptor.get,\n      set: internals.CEReactions(/** @this {Element} */ function(htmlString) {\n        // NOTE: In IE11, when using the native `innerHTML` setter, all nodes\n        // that were previously descendants of the context element have all of\n        // their children removed as part of the set - the entire subtree is\n        // 'disassembled'. This work around walks the subtree *before* using the\n        // native setter.\n        if (Utilities.isConnected(this)) {\n          Utilities.walkDeepDescendantElements(this, element => {\n            if (element !== this && element.__CE_state === CEState.custom) {\n              internals.disconnectedCallback(element);\n            }\n          });\n        }\n\n        baseDescriptor.set.call(this, htmlString);\n\n        // Only create custom elements if this element's owner document is\n        // associated with the registry.\n        if (!this.ownerDocument.__CE_hasRegistry) {\n          internals.patchTree(this);\n        } else {\n          internals.patchAndUpgradeTree(this);\n        }\n        return htmlString;\n      }),\n    });\n  }\n\n  if (Native.Element_innerHTML && Native.Element_innerHTML.get) {\n    patch_innerHTML(Element.prototype, Native.Element_innerHTML);\n  } else if (Native.HTMLElement_innerHTML && Native.HTMLElement_innerHTML.get) {\n    patch_innerHTML(HTMLElement.prototype, Native.HTMLElement_innerHTML);\n  } else {\n\n    /** @type {HTMLDivElement} */\n    const rawDiv = Native.Document_createElement.call(document, 'div');\n\n    internals.addPatch(function(element) {\n      patch_innerHTML(element, {\n        enumerable: true,\n        configurable: true,\n        // Implements getting `innerHTML` by performing an unpatched `cloneNode`\n        // of the element and returning the resulting element's `innerHTML`.\n        // TODO: Is this too expensive?\n        get: /** @this {Element} */ function() {\n          return Native.Node_cloneNode.call(this, true).innerHTML;\n        },\n        // Implements setting `innerHTML` by creating an unpatched element,\n        // setting `innerHTML` of that element and replacing the target\n        // element's children with those of the unpatched element.\n        set: /** @this {Element} */ function(assignedValue) {\n          // NOTE: re-route to `content` for `template` elements.\n          // We need to do this because `template.appendChild` does not\n          // route into `template.content`.\n          /** @type {!Node} */\n          const content = this.localName === 'template' ? (/** @type {!HTMLTemplateElement} */ (this)).content : this;\n          rawDiv.innerHTML = assignedValue;\n\n          while (content.childNodes.length > 0) {\n            Native.Node_removeChild.call(content, content.childNodes[0]);\n          }\n          while (rawDiv.childNodes.length > 0) {\n            Native.Node_appendChild.call(content, rawDiv.childNodes[0]);\n          }\n        },\n      });\n    });\n  }\n\n\n  Utilities.setPropertyUnchecked(Element.prototype, 'setAttribute',\n    internals.CEReactions(\n      /**\n       * @this {Element}\n       * @param {string} name\n       * @param {string} newValue\n       */\n      function(name, newValue) {\n        // Fast path for non-custom elements.\n        if (this.__CE_state !== CEState.custom) {\n          return Native.Element_setAttribute.call(this, name, newValue);\n        }\n\n        const oldValue = Native.Element_getAttribute.call(this, name);\n        Native.Element_setAttribute.call(this, name, newValue);\n        newValue = Native.Element_getAttribute.call(this, name);\n        if (oldValue !== newValue) {\n          internals.attributeChangedCallback(this, name, oldValue, newValue, null);\n        }\n      }));\n\n  Utilities.setPropertyUnchecked(Element.prototype, 'setAttributeNS',\n    internals.CEReactions(\n      /**\n       * @this {Element}\n       * @param {?string} namespace\n       * @param {string} name\n       * @param {string} newValue\n       */\n      function(namespace, name, newValue) {\n        // Fast path for non-custom elements.\n        if (this.__CE_state !== CEState.custom) {\n          return Native.Element_setAttributeNS.call(this, namespace, name, newValue);\n        }\n\n        const oldValue = Native.Element_getAttributeNS.call(this, namespace, name);\n        Native.Element_setAttributeNS.call(this, namespace, name, newValue);\n        newValue = Native.Element_getAttributeNS.call(this, namespace, name);\n        if (oldValue !== newValue) {\n          internals.attributeChangedCallback(this, name, oldValue, newValue, namespace);\n        }\n      }));\n\n  Utilities.setPropertyUnchecked(Element.prototype, 'removeAttribute',\n    internals.CEReactions(\n      /**\n       * @this {Element}\n       * @param {string} name\n       */\n      function(name) {\n        // Fast path for non-custom elements.\n        if (this.__CE_state !== CEState.custom) {\n          return Native.Element_removeAttribute.call(this, name);\n        }\n\n        const oldValue = Native.Element_getAttribute.call(this, name);\n        Native.Element_removeAttribute.call(this, name);\n        if (oldValue !== null) {\n          internals.attributeChangedCallback(this, name, oldValue, null, null);\n        }\n      }));\n\n  Utilities.setPropertyUnchecked(Element.prototype, 'removeAttributeNS',\n    internals.CEReactions(\n      /**\n       * @this {Element}\n       * @param {?string} namespace\n       * @param {string} name\n       */\n      function(namespace, name) {\n        // Fast path for non-custom elements.\n        if (this.__CE_state !== CEState.custom) {\n          return Native.Element_removeAttributeNS.call(this, namespace, name);\n        }\n\n        const oldValue = Native.Element_getAttributeNS.call(this, namespace, name);\n        Native.Element_removeAttributeNS.call(this, namespace, name);\n        // In older browsers, `Element#getAttributeNS` may return the empty string\n        // instead of null if the attribute does not exist. For details, see;\n        // https://developer.mozilla.org/en-US/docs/Web/API/Element/getAttributeNS#Notes\n        const newValue = Native.Element_getAttributeNS.call(this, namespace, name);\n        if (oldValue !== newValue) {\n          internals.attributeChangedCallback(this, name, oldValue, newValue, namespace);\n        }\n      }));\n\n\n  function patch_insertAdjacentElement(destination, baseMethod) {\n    Utilities.setPropertyUnchecked(destination, 'insertAdjacentElement',\n      internals.CEReactions(\n        /**\n         * @this {Element}\n         * @param {string} where\n         * @param {!Element} element\n         * @return {?Element}\n         */\n        function(where, element) {\n          const wasConnected = Utilities.isConnected(element);\n          const insertedElement = /** @type {!Element} */\n            (baseMethod.call(this, where, element));\n\n          if (wasConnected) {\n            internals.disconnectTree(element);\n          }\n\n          if (Utilities.isConnected(insertedElement)) {\n            internals.connectTree(element);\n          }\n          return insertedElement;\n        }));\n  }\n\n  if (Native.HTMLElement_insertAdjacentElement) {\n    patch_insertAdjacentElement(HTMLElement.prototype, Native.HTMLElement_insertAdjacentElement);\n  } else if (Native.Element_insertAdjacentElement) {\n    patch_insertAdjacentElement(Element.prototype, Native.Element_insertAdjacentElement);\n  } else {\n    console.warn('Custom Elements: `Element#insertAdjacentElement` was not patched.');\n  }\n\n\n  PatchParentNode(internals, Element.prototype, {\n    prepend: Native.Element_prepend,\n    append: Native.Element_append,\n  });\n\n  PatchChildNode(internals, Element.prototype, {\n    before: Native.Element_before,\n    after: Native.Element_after,\n    replaceWith: Native.Element_replaceWith,\n    remove: Native.Element_remove,\n  });\n};\n"]}